/*
 * generated by Xtext 2.19.0
 */
package org.xtext.mdl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class V1GrammarAccess extends AbstractGrammarElementFinder {
	
	public class WorkflowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.Workflow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cStartDateKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cDateDebutAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cDateDebutDATETerminalRuleCall_0_1_0 = (RuleCall)cDateDebutAssignment_0_1.eContents().get(0);
		private final Assignment cStepsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStepsStepParserRuleCall_1_0 = (RuleCall)cStepsAssignment_1.eContents().get(0);
		
		//// Parsing
		// Workflow:
		//	('StartDate:' dateDebut=DATE)? steps+=Step*;
		@Override public ParserRule getRule() { return rule; }
		
		//('StartDate:' dateDebut=DATE)? steps+=Step*
		public Group getGroup() { return cGroup; }
		
		//('StartDate:' dateDebut=DATE)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'StartDate:'
		public Keyword getStartDateKeyword_0_0() { return cStartDateKeyword_0_0; }
		
		//dateDebut=DATE
		public Assignment getDateDebutAssignment_0_1() { return cDateDebutAssignment_0_1; }
		
		//DATE
		public RuleCall getDateDebutDATETerminalRuleCall_0_1_0() { return cDateDebutDATETerminalRuleCall_0_1_0; }
		
		//steps+=Step*
		public Assignment getStepsAssignment_1() { return cStepsAssignment_1; }
		
		//Step
		public RuleCall getStepsStepParserRuleCall_1_0() { return cStepsStepParserRuleCall_1_0; }
	}
	public class StepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.Step");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLATerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cStepNumberKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIdINTTerminalRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		private final Keyword cStepNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cLPTerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cRemindersAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cRemindersReminderParserRuleCall_5_1_0 = (RuleCall)cRemindersAssignment_5_1.eContents().get(0);
		private final RuleCall cRPTerminalRuleCall_5_2 = (RuleCall)cGroup_5.eContents().get(2);
		private final Assignment cObjAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cObjObjectParserRuleCall_6_0 = (RuleCall)cObjAssignment_6.eContents().get(0);
		private final RuleCall cRATerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		//Step:
		//	LA 'StepNumber:' id=INT 'StepName:' name=STRING (LP reminders+=Reminder+ RP)? obj=Object RA;
		@Override public ParserRule getRule() { return rule; }
		
		//LA 'StepNumber:' id=INT 'StepName:' name=STRING (LP reminders+=Reminder+ RP)? obj=Object RA
		public Group getGroup() { return cGroup; }
		
		//LA
		public RuleCall getLATerminalRuleCall_0() { return cLATerminalRuleCall_0; }
		
		//'StepNumber:'
		public Keyword getStepNumberKeyword_1() { return cStepNumberKeyword_1; }
		
		//id=INT
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }
		
		//INT
		public RuleCall getIdINTTerminalRuleCall_2_0() { return cIdINTTerminalRuleCall_2_0; }
		
		//'StepName:'
		public Keyword getStepNameKeyword_3() { return cStepNameKeyword_3; }
		
		//name=STRING
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }
		
		//(LP reminders+=Reminder+ RP)?
		public Group getGroup_5() { return cGroup_5; }
		
		//LP
		public RuleCall getLPTerminalRuleCall_5_0() { return cLPTerminalRuleCall_5_0; }
		
		//reminders+=Reminder+
		public Assignment getRemindersAssignment_5_1() { return cRemindersAssignment_5_1; }
		
		//Reminder
		public RuleCall getRemindersReminderParserRuleCall_5_1_0() { return cRemindersReminderParserRuleCall_5_1_0; }
		
		//RP
		public RuleCall getRPTerminalRuleCall_5_2() { return cRPTerminalRuleCall_5_2; }
		
		//obj=Object
		public Assignment getObjAssignment_6() { return cObjAssignment_6; }
		
		//Object
		public RuleCall getObjObjectParserRuleCall_6_0() { return cObjObjectParserRuleCall_6_0; }
		
		//RA
		public RuleCall getRATerminalRuleCall_7() { return cRATerminalRuleCall_7; }
	}
	public class ObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.Object");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cQuestionsKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cObjAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cObjQCMParserRuleCall_0_1_0 = (RuleCall)cObjAssignment_0_1.eContents().get(0);
		private final Assignment cCondAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cCondEndCondParserRuleCall_0_2_0 = (RuleCall)cCondAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cMailKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cMailAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cMailMailParserRuleCall_1_1_0 = (RuleCall)cMailAssignment_1_1.eContents().get(0);
		private final Assignment cDateEnvoiAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cDateEnvoiDATETerminalRuleCall_1_2_0 = (RuleCall)cDateEnvoiAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cCalendarKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSynchDateAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cSynchDateSynchDateParserRuleCall_2_1_0 = (RuleCall)cSynchDateAssignment_2_1.eContents().get(0);
		private final Assignment cCondAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cCondEndCondParserRuleCall_2_2_0 = (RuleCall)cCondAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cFileDepositoryKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDepotAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDepotDepotParserRuleCall_3_1_0 = (RuleCall)cDepotAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cTimeLapsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDateFinAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDateFinDATETerminalRuleCall_4_1_0 = (RuleCall)cDateFinAssignment_4_1.eContents().get(0);
		
		//Object:
		//	'Questions' obj=QCM cond=EndCond | 'Mail' mail=Mail dateEnvoi=DATE | 'Calendar' synchDate=SynchDate cond=EndCond |
		//	'FileDepository' depot=Depot | 'TimeLaps' dateFin=DATE // Etape vide
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Questions' obj=QCM cond=EndCond | 'Mail' mail=Mail dateEnvoi=DATE | 'Calendar' synchDate=SynchDate cond=EndCond |
		//'FileDepository' depot=Depot | 'TimeLaps' dateFin=DATE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Questions' obj=QCM cond=EndCond
		public Group getGroup_0() { return cGroup_0; }
		
		//'Questions'
		public Keyword getQuestionsKeyword_0_0() { return cQuestionsKeyword_0_0; }
		
		//obj=QCM
		public Assignment getObjAssignment_0_1() { return cObjAssignment_0_1; }
		
		//QCM
		public RuleCall getObjQCMParserRuleCall_0_1_0() { return cObjQCMParserRuleCall_0_1_0; }
		
		//cond=EndCond
		public Assignment getCondAssignment_0_2() { return cCondAssignment_0_2; }
		
		//EndCond
		public RuleCall getCondEndCondParserRuleCall_0_2_0() { return cCondEndCondParserRuleCall_0_2_0; }
		
		//'Mail' mail=Mail dateEnvoi=DATE
		public Group getGroup_1() { return cGroup_1; }
		
		//'Mail'
		public Keyword getMailKeyword_1_0() { return cMailKeyword_1_0; }
		
		//mail=Mail
		public Assignment getMailAssignment_1_1() { return cMailAssignment_1_1; }
		
		//Mail
		public RuleCall getMailMailParserRuleCall_1_1_0() { return cMailMailParserRuleCall_1_1_0; }
		
		//dateEnvoi=DATE
		public Assignment getDateEnvoiAssignment_1_2() { return cDateEnvoiAssignment_1_2; }
		
		//DATE
		public RuleCall getDateEnvoiDATETerminalRuleCall_1_2_0() { return cDateEnvoiDATETerminalRuleCall_1_2_0; }
		
		//'Calendar' synchDate=SynchDate cond=EndCond
		public Group getGroup_2() { return cGroup_2; }
		
		//'Calendar'
		public Keyword getCalendarKeyword_2_0() { return cCalendarKeyword_2_0; }
		
		//synchDate=SynchDate
		public Assignment getSynchDateAssignment_2_1() { return cSynchDateAssignment_2_1; }
		
		//SynchDate
		public RuleCall getSynchDateSynchDateParserRuleCall_2_1_0() { return cSynchDateSynchDateParserRuleCall_2_1_0; }
		
		//cond=EndCond
		public Assignment getCondAssignment_2_2() { return cCondAssignment_2_2; }
		
		//EndCond
		public RuleCall getCondEndCondParserRuleCall_2_2_0() { return cCondEndCondParserRuleCall_2_2_0; }
		
		//'FileDepository' depot=Depot
		public Group getGroup_3() { return cGroup_3; }
		
		//'FileDepository'
		public Keyword getFileDepositoryKeyword_3_0() { return cFileDepositoryKeyword_3_0; }
		
		//depot=Depot
		public Assignment getDepotAssignment_3_1() { return cDepotAssignment_3_1; }
		
		//Depot
		public RuleCall getDepotDepotParserRuleCall_3_1_0() { return cDepotDepotParserRuleCall_3_1_0; }
		
		//'TimeLaps' dateFin=DATE
		public Group getGroup_4() { return cGroup_4; }
		
		//'TimeLaps'
		public Keyword getTimeLapsKeyword_4_0() { return cTimeLapsKeyword_4_0; }
		
		//dateFin=DATE
		public Assignment getDateFinAssignment_4_1() { return cDateFinAssignment_4_1; }
		
		//DATE
		public RuleCall getDateFinDATETerminalRuleCall_4_1_0() { return cDateFinDATETerminalRuleCall_4_1_0; }
	}
	public class EndCondElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.EndCond");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDateAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDateDATETerminalRuleCall_0_0 = (RuleCall)cDateAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cParticipantsRequiredKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cParticipantsRequiredAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cParticipantsRequiredINTTerminalRuleCall_1_1_0 = (RuleCall)cParticipantsRequiredAssignment_1_1.eContents().get(0);
		
		//EndCond:
		//	date=DATE ('ParticipantsRequired:' ParticipantsRequired=INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//date=DATE ('ParticipantsRequired:' ParticipantsRequired=INT)?
		public Group getGroup() { return cGroup; }
		
		//date=DATE
		public Assignment getDateAssignment_0() { return cDateAssignment_0; }
		
		//DATE
		public RuleCall getDateDATETerminalRuleCall_0_0() { return cDateDATETerminalRuleCall_0_0; }
		
		//('ParticipantsRequired:' ParticipantsRequired=INT)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'ParticipantsRequired:'
		public Keyword getParticipantsRequiredKeyword_1_0() { return cParticipantsRequiredKeyword_1_0; }
		
		//ParticipantsRequired=INT
		public Assignment getParticipantsRequiredAssignment_1_1() { return cParticipantsRequiredAssignment_1_1; }
		
		//INT
		public RuleCall getParticipantsRequiredINTTerminalRuleCall_1_1_0() { return cParticipantsRequiredINTTerminalRuleCall_1_1_0; }
	}
	public class SynchDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.SynchDate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLATerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cStartingDateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cStartAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStartDATETerminalRuleCall_2_0 = (RuleCall)cStartAssignment_2.eContents().get(0);
		private final Keyword cEndingDateKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEndDATETerminalRuleCall_4_0 = (RuleCall)cEndAssignment_4.eContents().get(0);
		private final Keyword cAccuracyKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPrecisionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPrecisionSTRINGTerminalRuleCall_6_0 = (RuleCall)cPrecisionAssignment_6.eContents().get(0);
		private final RuleCall cRATerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		//// TODO "Precision" a developper.
		// SynchDate:
		//	LA 'StartingDate:' start=DATE 'EndingDate:' end=DATE 'Accuracy:' precision=STRING? RA;
		@Override public ParserRule getRule() { return rule; }
		
		//LA 'StartingDate:' start=DATE 'EndingDate:' end=DATE 'Accuracy:' precision=STRING? RA
		public Group getGroup() { return cGroup; }
		
		//LA
		public RuleCall getLATerminalRuleCall_0() { return cLATerminalRuleCall_0; }
		
		//'StartingDate:'
		public Keyword getStartingDateKeyword_1() { return cStartingDateKeyword_1; }
		
		//start=DATE
		public Assignment getStartAssignment_2() { return cStartAssignment_2; }
		
		//DATE
		public RuleCall getStartDATETerminalRuleCall_2_0() { return cStartDATETerminalRuleCall_2_0; }
		
		//'EndingDate:'
		public Keyword getEndingDateKeyword_3() { return cEndingDateKeyword_3; }
		
		//end=DATE
		public Assignment getEndAssignment_4() { return cEndAssignment_4; }
		
		//DATE
		public RuleCall getEndDATETerminalRuleCall_4_0() { return cEndDATETerminalRuleCall_4_0; }
		
		//'Accuracy:'
		public Keyword getAccuracyKeyword_5() { return cAccuracyKeyword_5; }
		
		//precision=STRING?
		public Assignment getPrecisionAssignment_6() { return cPrecisionAssignment_6; }
		
		//STRING
		public RuleCall getPrecisionSTRINGTerminalRuleCall_6_0() { return cPrecisionSTRINGTerminalRuleCall_6_0; }
		
		//RA
		public RuleCall getRATerminalRuleCall_7() { return cRATerminalRuleCall_7; }
	}
	public class DepotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.Depot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLATerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cTitleSubmissionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIntituleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIntituleSTRINGTerminalRuleCall_2_0 = (RuleCall)cIntituleAssignment_2.eContents().get(0);
		private final Keyword cSizeLimiteKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLimiteSizeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLimiteSizeINTTerminalRuleCall_4_0 = (RuleCall)cLimiteSizeAssignment_4.eContents().get(0);
		private final Assignment cFormatAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFormatSTRINGTerminalRuleCall_5_0 = (RuleCall)cFormatAssignment_5.eContents().get(0);
		private final RuleCall cRATerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//Depot:
		//	LA 'TitleSubmission:' intitule=STRING 'SizeLimite:' limiteSize=INT format+=STRING* RA;
		@Override public ParserRule getRule() { return rule; }
		
		//LA 'TitleSubmission:' intitule=STRING 'SizeLimite:' limiteSize=INT format+=STRING* RA
		public Group getGroup() { return cGroup; }
		
		//LA
		public RuleCall getLATerminalRuleCall_0() { return cLATerminalRuleCall_0; }
		
		//'TitleSubmission:'
		public Keyword getTitleSubmissionKeyword_1() { return cTitleSubmissionKeyword_1; }
		
		//intitule=STRING
		public Assignment getIntituleAssignment_2() { return cIntituleAssignment_2; }
		
		//STRING
		public RuleCall getIntituleSTRINGTerminalRuleCall_2_0() { return cIntituleSTRINGTerminalRuleCall_2_0; }
		
		//'SizeLimite:'
		public Keyword getSizeLimiteKeyword_3() { return cSizeLimiteKeyword_3; }
		
		//limiteSize=INT
		public Assignment getLimiteSizeAssignment_4() { return cLimiteSizeAssignment_4; }
		
		//INT
		public RuleCall getLimiteSizeINTTerminalRuleCall_4_0() { return cLimiteSizeINTTerminalRuleCall_4_0; }
		
		//format+=STRING*
		public Assignment getFormatAssignment_5() { return cFormatAssignment_5; }
		
		//STRING
		public RuleCall getFormatSTRINGTerminalRuleCall_5_0() { return cFormatSTRINGTerminalRuleCall_5_0; }
		
		//RA
		public RuleCall getRATerminalRuleCall_6() { return cRATerminalRuleCall_6; }
	}
	public class QCMElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.QCM");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLATerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cQuestionTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeTypeQCMParserRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Keyword cTitleQuestionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIntituleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIntituleSTRINGTerminalRuleCall_4_0 = (RuleCall)cIntituleAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPossibleResponseKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cResponsesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cResponsesSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cResponsesAssignment_5_1.eContents().get(0);
		private final RuleCall cRATerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cSuiteAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSuiteQCMParserRuleCall_7_0 = (RuleCall)cSuiteAssignment_7.eContents().get(0);
		
		//QCM:
		//	LA 'QuestionType:' type=TypeQCM 'TitleQuestion:' intitule=STRING ('PossibleResponse:' responses+=STRING+)? RA
		//	suite=QCM?;
		@Override public ParserRule getRule() { return rule; }
		
		//LA 'QuestionType:' type=TypeQCM 'TitleQuestion:' intitule=STRING ('PossibleResponse:' responses+=STRING+)? RA suite=QCM?
		public Group getGroup() { return cGroup; }
		
		//LA
		public RuleCall getLATerminalRuleCall_0() { return cLATerminalRuleCall_0; }
		
		//'QuestionType:'
		public Keyword getQuestionTypeKeyword_1() { return cQuestionTypeKeyword_1; }
		
		//type=TypeQCM
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//TypeQCM
		public RuleCall getTypeTypeQCMParserRuleCall_2_0() { return cTypeTypeQCMParserRuleCall_2_0; }
		
		//'TitleQuestion:'
		public Keyword getTitleQuestionKeyword_3() { return cTitleQuestionKeyword_3; }
		
		//intitule=STRING
		public Assignment getIntituleAssignment_4() { return cIntituleAssignment_4; }
		
		//STRING
		public RuleCall getIntituleSTRINGTerminalRuleCall_4_0() { return cIntituleSTRINGTerminalRuleCall_4_0; }
		
		//('PossibleResponse:' responses+=STRING+)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'PossibleResponse:'
		public Keyword getPossibleResponseKeyword_5_0() { return cPossibleResponseKeyword_5_0; }
		
		//responses+=STRING+
		public Assignment getResponsesAssignment_5_1() { return cResponsesAssignment_5_1; }
		
		//STRING
		public RuleCall getResponsesSTRINGTerminalRuleCall_5_1_0() { return cResponsesSTRINGTerminalRuleCall_5_1_0; }
		
		//RA
		public RuleCall getRATerminalRuleCall_6() { return cRATerminalRuleCall_6; }
		
		//suite=QCM?
		public Assignment getSuiteAssignment_7() { return cSuiteAssignment_7; }
		
		//QCM
		public RuleCall getSuiteQCMParserRuleCall_7_0() { return cSuiteQCMParserRuleCall_7_0; }
	}
	public class TypeQCMElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.TypeQCM");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOPENQUESTIONAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cOPENQUESTIONOpenQuestionKeyword_0_0 = (Keyword)cOPENQUESTIONAssignment_0.eContents().get(0);
		private final Assignment cCHECKBOXAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cCHECKBOXCheckBoxKeyword_1_0 = (Keyword)cCHECKBOXAssignment_1.eContents().get(0);
		private final Assignment cRADIOBUTTONAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cRADIOBUTTONRadioButtonKeyword_2_0 = (Keyword)cRADIOBUTTONAssignment_2.eContents().get(0);
		
		//TypeQCM:
		//	OPENQUESTION='OpenQuestion' | CHECKBOX='CheckBox' | RADIOBUTTON='RadioButton';
		@Override public ParserRule getRule() { return rule; }
		
		//OPENQUESTION='OpenQuestion' | CHECKBOX='CheckBox' | RADIOBUTTON='RadioButton'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//OPENQUESTION='OpenQuestion'
		public Assignment getOPENQUESTIONAssignment_0() { return cOPENQUESTIONAssignment_0; }
		
		//'OpenQuestion'
		public Keyword getOPENQUESTIONOpenQuestionKeyword_0_0() { return cOPENQUESTIONOpenQuestionKeyword_0_0; }
		
		//CHECKBOX='CheckBox'
		public Assignment getCHECKBOXAssignment_1() { return cCHECKBOXAssignment_1; }
		
		//'CheckBox'
		public Keyword getCHECKBOXCheckBoxKeyword_1_0() { return cCHECKBOXCheckBoxKeyword_1_0; }
		
		//RADIOBUTTON='RadioButton'
		public Assignment getRADIOBUTTONAssignment_2() { return cRADIOBUTTONAssignment_2; }
		
		//'RadioButton'
		public Keyword getRADIOBUTTONRadioButtonKeyword_2_0() { return cRADIOBUTTONRadioButtonKeyword_2_0; }
	}
	public class ReminderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.Reminder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReminderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDateAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDateDATETerminalRuleCall_1_0 = (RuleCall)cDateAssignment_1.eContents().get(0);
		private final Assignment cMailAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMailMailParserRuleCall_2_0 = (RuleCall)cMailAssignment_2.eContents().get(0);
		
		//Reminder:
		//	'Reminder' date+=DATE+ mail=Mail;
		@Override public ParserRule getRule() { return rule; }
		
		//'Reminder' date+=DATE+ mail=Mail
		public Group getGroup() { return cGroup; }
		
		//'Reminder'
		public Keyword getReminderKeyword_0() { return cReminderKeyword_0; }
		
		//date+=DATE+
		public Assignment getDateAssignment_1() { return cDateAssignment_1; }
		
		//DATE
		public RuleCall getDateDATETerminalRuleCall_1_0() { return cDateDATETerminalRuleCall_1_0; }
		
		//mail=Mail
		public Assignment getMailAssignment_2() { return cMailAssignment_2; }
		
		//Mail
		public RuleCall getMailMailParserRuleCall_2_0() { return cMailMailParserRuleCall_2_0; }
	}
	public class MailElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.Mail");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLATerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFromKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExpediteurAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExpediteurADDRESSEMAILTerminalRuleCall_2_0 = (RuleCall)cExpediteurAssignment_2.eContents().get(0);
		private final Keyword cToKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDestinataireAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDestinataireADDRESSEMAILTerminalRuleCall_4_0 = (RuleCall)cDestinataireAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAttachmentKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPjAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cPjSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cPjAssignment_5_1.eContents().get(0);
		private final Keyword cBodyKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cCorpsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cCorpsContenuParserRuleCall_7_0 = (RuleCall)cCorpsAssignment_7.eContents().get(0);
		private final RuleCall cRATerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		//Mail:
		//	LA 'From:' expediteur=ADDRESSEMAIL 'To:' destinataire+=ADDRESSEMAIL+ ('Attachment:' pj=STRING)? 'Body:' corps=Contenu
		//	RA;
		@Override public ParserRule getRule() { return rule; }
		
		//LA 'From:' expediteur=ADDRESSEMAIL 'To:' destinataire+=ADDRESSEMAIL+ ('Attachment:' pj=STRING)? 'Body:' corps=Contenu RA
		public Group getGroup() { return cGroup; }
		
		//LA
		public RuleCall getLATerminalRuleCall_0() { return cLATerminalRuleCall_0; }
		
		//'From:'
		public Keyword getFromKeyword_1() { return cFromKeyword_1; }
		
		//expediteur=ADDRESSEMAIL
		public Assignment getExpediteurAssignment_2() { return cExpediteurAssignment_2; }
		
		//ADDRESSEMAIL
		public RuleCall getExpediteurADDRESSEMAILTerminalRuleCall_2_0() { return cExpediteurADDRESSEMAILTerminalRuleCall_2_0; }
		
		//'To:'
		public Keyword getToKeyword_3() { return cToKeyword_3; }
		
		//destinataire+=ADDRESSEMAIL+
		public Assignment getDestinataireAssignment_4() { return cDestinataireAssignment_4; }
		
		//ADDRESSEMAIL
		public RuleCall getDestinataireADDRESSEMAILTerminalRuleCall_4_0() { return cDestinataireADDRESSEMAILTerminalRuleCall_4_0; }
		
		//('Attachment:' pj=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'Attachment:'
		public Keyword getAttachmentKeyword_5_0() { return cAttachmentKeyword_5_0; }
		
		//pj=STRING
		public Assignment getPjAssignment_5_1() { return cPjAssignment_5_1; }
		
		//STRING
		public RuleCall getPjSTRINGTerminalRuleCall_5_1_0() { return cPjSTRINGTerminalRuleCall_5_1_0; }
		
		//'Body:'
		public Keyword getBodyKeyword_6() { return cBodyKeyword_6; }
		
		//corps=Contenu
		public Assignment getCorpsAssignment_7() { return cCorpsAssignment_7; }
		
		//Contenu
		public RuleCall getCorpsContenuParserRuleCall_7_0() { return cCorpsContenuParserRuleCall_7_0; }
		
		//RA
		public RuleCall getRATerminalRuleCall_8() { return cRATerminalRuleCall_8; }
	}
	public class ContenuElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.Contenu");
		private final Assignment cCorpsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cCorpsSTRINGTerminalRuleCall_0 = (RuleCall)cCorpsAssignment.eContents().get(0);
		
		//Contenu:
		//	corps=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//corps=STRING
		public Assignment getCorpsAssignment() { return cCorpsAssignment; }
		
		//STRING
		public RuleCall getCorpsSTRINGTerminalRuleCall_0() { return cCorpsSTRINGTerminalRuleCall_0; }
	}
	
	
	private final WorkflowElements pWorkflow;
	private final StepElements pStep;
	private final ObjectElements pObject;
	private final EndCondElements pEndCond;
	private final SynchDateElements pSynchDate;
	private final DepotElements pDepot;
	private final QCMElements pQCM;
	private final TypeQCMElements pTypeQCM;
	private final ReminderElements pReminder;
	private final MailElements pMail;
	private final ContenuElements pContenu;
	private final TerminalRule tDATE;
	private final TerminalRule tADDRESSEMAIL;
	private final TerminalRule tRP;
	private final TerminalRule tLP;
	private final TerminalRule tRA;
	private final TerminalRule tLA;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public V1GrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pWorkflow = new WorkflowElements();
		this.pStep = new StepElements();
		this.pObject = new ObjectElements();
		this.pEndCond = new EndCondElements();
		this.pSynchDate = new SynchDateElements();
		this.pDepot = new DepotElements();
		this.pQCM = new QCMElements();
		this.pTypeQCM = new TypeQCMElements();
		this.pReminder = new ReminderElements();
		this.pMail = new MailElements();
		this.pContenu = new ContenuElements();
		this.tDATE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.DATE");
		this.tADDRESSEMAIL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.ADDRESSEMAIL");
		this.tRP = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.RP");
		this.tLP = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.LP");
		this.tRA = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.RA");
		this.tLA = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.LA");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.mdl.V1".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//// Parsing
	// Workflow:
	//	('StartDate:' dateDebut=DATE)? steps+=Step*;
	public WorkflowElements getWorkflowAccess() {
		return pWorkflow;
	}
	
	public ParserRule getWorkflowRule() {
		return getWorkflowAccess().getRule();
	}
	
	//Step:
	//	LA 'StepNumber:' id=INT 'StepName:' name=STRING (LP reminders+=Reminder+ RP)? obj=Object RA;
	public StepElements getStepAccess() {
		return pStep;
	}
	
	public ParserRule getStepRule() {
		return getStepAccess().getRule();
	}
	
	//Object:
	//	'Questions' obj=QCM cond=EndCond | 'Mail' mail=Mail dateEnvoi=DATE | 'Calendar' synchDate=SynchDate cond=EndCond |
	//	'FileDepository' depot=Depot | 'TimeLaps' dateFin=DATE // Etape vide
	//;
	public ObjectElements getObjectAccess() {
		return pObject;
	}
	
	public ParserRule getObjectRule() {
		return getObjectAccess().getRule();
	}
	
	//EndCond:
	//	date=DATE ('ParticipantsRequired:' ParticipantsRequired=INT)?;
	public EndCondElements getEndCondAccess() {
		return pEndCond;
	}
	
	public ParserRule getEndCondRule() {
		return getEndCondAccess().getRule();
	}
	
	//// TODO "Precision" a developper.
	// SynchDate:
	//	LA 'StartingDate:' start=DATE 'EndingDate:' end=DATE 'Accuracy:' precision=STRING? RA;
	public SynchDateElements getSynchDateAccess() {
		return pSynchDate;
	}
	
	public ParserRule getSynchDateRule() {
		return getSynchDateAccess().getRule();
	}
	
	//Depot:
	//	LA 'TitleSubmission:' intitule=STRING 'SizeLimite:' limiteSize=INT format+=STRING* RA;
	public DepotElements getDepotAccess() {
		return pDepot;
	}
	
	public ParserRule getDepotRule() {
		return getDepotAccess().getRule();
	}
	
	//QCM:
	//	LA 'QuestionType:' type=TypeQCM 'TitleQuestion:' intitule=STRING ('PossibleResponse:' responses+=STRING+)? RA
	//	suite=QCM?;
	public QCMElements getQCMAccess() {
		return pQCM;
	}
	
	public ParserRule getQCMRule() {
		return getQCMAccess().getRule();
	}
	
	//TypeQCM:
	//	OPENQUESTION='OpenQuestion' | CHECKBOX='CheckBox' | RADIOBUTTON='RadioButton';
	public TypeQCMElements getTypeQCMAccess() {
		return pTypeQCM;
	}
	
	public ParserRule getTypeQCMRule() {
		return getTypeQCMAccess().getRule();
	}
	
	//Reminder:
	//	'Reminder' date+=DATE+ mail=Mail;
	public ReminderElements getReminderAccess() {
		return pReminder;
	}
	
	public ParserRule getReminderRule() {
		return getReminderAccess().getRule();
	}
	
	//Mail:
	//	LA 'From:' expediteur=ADDRESSEMAIL 'To:' destinataire+=ADDRESSEMAIL+ ('Attachment:' pj=STRING)? 'Body:' corps=Contenu
	//	RA;
	public MailElements getMailAccess() {
		return pMail;
	}
	
	public ParserRule getMailRule() {
		return getMailAccess().getRule();
	}
	
	//Contenu:
	//	corps=STRING;
	public ContenuElements getContenuAccess() {
		return pContenu;
	}
	
	public ParserRule getContenuRule() {
		return getContenuAccess().getRule();
	}
	
	//terminal DATE:
	//	'0'..'2' '0'..'9' '/' '0'..'1' '0'..'9' '/' ('2'..'9' '0'..'9')? '0'..'9' '0'..'9';
	public TerminalRule getDATERule() {
		return tDATE;
	}
	
	//terminal ADDRESSEMAIL:
	//	('0'..'9' | 'a'..'z' | 'A'..'Z')+ "@" ('a'..'z' | 'A'..'Z')+ "." ('a'..'z' | 'A'..'Z')+;
	public TerminalRule getADDRESSEMAILRule() {
		return tADDRESSEMAIL;
	}
	
	//terminal RP:
	//	')';
	public TerminalRule getRPRule() {
		return tRP;
	}
	
	//terminal LP:
	//	'(';
	public TerminalRule getLPRule() {
		return tLP;
	}
	
	//terminal RA:
	//	'}';
	public TerminalRule getRARule() {
		return tRA;
	}
	
	//terminal LA:
	//	'{';
	public TerminalRule getLARule() {
		return tLA;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
