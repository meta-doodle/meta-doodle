/**
 * generated by Xtext 2.19.0
 */
package org.xtext.mdl.v1.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

import org.xtext.mdl.v1.Contenu;
import org.xtext.mdl.v1.Mail;
import org.xtext.mdl.v1.V1Package;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Mail</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.mdl.v1.impl.MailImpl#getExpediteur <em>Expediteur</em>}</li>
 *   <li>{@link org.xtext.mdl.v1.impl.MailImpl#getDestinataire <em>Destinataire</em>}</li>
 *   <li>{@link org.xtext.mdl.v1.impl.MailImpl#getPj <em>Pj</em>}</li>
 *   <li>{@link org.xtext.mdl.v1.impl.MailImpl#getCorps <em>Corps</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MailImpl extends MinimalEObjectImpl.Container implements Mail
{
  /**
   * The default value of the '{@link #getExpediteur() <em>Expediteur</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpediteur()
   * @generated
   * @ordered
   */
  protected static final String EXPEDITEUR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getExpediteur() <em>Expediteur</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpediteur()
   * @generated
   * @ordered
   */
  protected String expediteur = EXPEDITEUR_EDEFAULT;

  /**
   * The cached value of the '{@link #getDestinataire() <em>Destinataire</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDestinataire()
   * @generated
   * @ordered
   */
  protected EList<String> destinataire;

  /**
   * The default value of the '{@link #getPj() <em>Pj</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPj()
   * @generated
   * @ordered
   */
  protected static final String PJ_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPj() <em>Pj</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPj()
   * @generated
   * @ordered
   */
  protected String pj = PJ_EDEFAULT;

  /**
   * The cached value of the '{@link #getCorps() <em>Corps</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCorps()
   * @generated
   * @ordered
   */
  protected Contenu corps;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MailImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return V1Package.Literals.MAIL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getExpediteur()
  {
    return expediteur;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpediteur(String newExpediteur)
  {
    String oldExpediteur = expediteur;
    expediteur = newExpediteur;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, V1Package.MAIL__EXPEDITEUR, oldExpediteur, expediteur));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getDestinataire()
  {
    if (destinataire == null)
    {
      destinataire = new EDataTypeEList<String>(String.class, this, V1Package.MAIL__DESTINATAIRE);
    }
    return destinataire;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPj()
  {
    return pj;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPj(String newPj)
  {
    String oldPj = pj;
    pj = newPj;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, V1Package.MAIL__PJ, oldPj, pj));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Contenu getCorps()
  {
    return corps;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCorps(Contenu newCorps, NotificationChain msgs)
  {
    Contenu oldCorps = corps;
    corps = newCorps;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, V1Package.MAIL__CORPS, oldCorps, newCorps);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCorps(Contenu newCorps)
  {
    if (newCorps != corps)
    {
      NotificationChain msgs = null;
      if (corps != null)
        msgs = ((InternalEObject)corps).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - V1Package.MAIL__CORPS, null, msgs);
      if (newCorps != null)
        msgs = ((InternalEObject)newCorps).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - V1Package.MAIL__CORPS, null, msgs);
      msgs = basicSetCorps(newCorps, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, V1Package.MAIL__CORPS, newCorps, newCorps));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case V1Package.MAIL__CORPS:
        return basicSetCorps(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case V1Package.MAIL__EXPEDITEUR:
        return getExpediteur();
      case V1Package.MAIL__DESTINATAIRE:
        return getDestinataire();
      case V1Package.MAIL__PJ:
        return getPj();
      case V1Package.MAIL__CORPS:
        return getCorps();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case V1Package.MAIL__EXPEDITEUR:
        setExpediteur((String)newValue);
        return;
      case V1Package.MAIL__DESTINATAIRE:
        getDestinataire().clear();
        getDestinataire().addAll((Collection<? extends String>)newValue);
        return;
      case V1Package.MAIL__PJ:
        setPj((String)newValue);
        return;
      case V1Package.MAIL__CORPS:
        setCorps((Contenu)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case V1Package.MAIL__EXPEDITEUR:
        setExpediteur(EXPEDITEUR_EDEFAULT);
        return;
      case V1Package.MAIL__DESTINATAIRE:
        getDestinataire().clear();
        return;
      case V1Package.MAIL__PJ:
        setPj(PJ_EDEFAULT);
        return;
      case V1Package.MAIL__CORPS:
        setCorps((Contenu)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case V1Package.MAIL__EXPEDITEUR:
        return EXPEDITEUR_EDEFAULT == null ? expediteur != null : !EXPEDITEUR_EDEFAULT.equals(expediteur);
      case V1Package.MAIL__DESTINATAIRE:
        return destinataire != null && !destinataire.isEmpty();
      case V1Package.MAIL__PJ:
        return PJ_EDEFAULT == null ? pj != null : !PJ_EDEFAULT.equals(pj);
      case V1Package.MAIL__CORPS:
        return corps != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (expediteur: ");
    result.append(expediteur);
    result.append(", destinataire: ");
    result.append(destinataire);
    result.append(", pj: ");
    result.append(pj);
    result.append(')');
    return result.toString();
  }

} //MailImpl
