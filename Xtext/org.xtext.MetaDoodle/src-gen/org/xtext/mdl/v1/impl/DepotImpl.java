/**
 * generated by Xtext 2.19.0
 */
package org.xtext.mdl.v1.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

import org.xtext.mdl.v1.Depot;
import org.xtext.mdl.v1.V1Package;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Depot</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.mdl.v1.impl.DepotImpl#getIntitule <em>Intitule</em>}</li>
 *   <li>{@link org.xtext.mdl.v1.impl.DepotImpl#getLimiteSize <em>Limite Size</em>}</li>
 *   <li>{@link org.xtext.mdl.v1.impl.DepotImpl#getFormat <em>Format</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DepotImpl extends MinimalEObjectImpl.Container implements Depot
{
  /**
   * The default value of the '{@link #getIntitule() <em>Intitule</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntitule()
   * @generated
   * @ordered
   */
  protected static final String INTITULE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIntitule() <em>Intitule</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntitule()
   * @generated
   * @ordered
   */
  protected String intitule = INTITULE_EDEFAULT;

  /**
   * The default value of the '{@link #getLimiteSize() <em>Limite Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLimiteSize()
   * @generated
   * @ordered
   */
  protected static final int LIMITE_SIZE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getLimiteSize() <em>Limite Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLimiteSize()
   * @generated
   * @ordered
   */
  protected int limiteSize = LIMITE_SIZE_EDEFAULT;

  /**
   * The cached value of the '{@link #getFormat() <em>Format</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFormat()
   * @generated
   * @ordered
   */
  protected EList<String> format;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DepotImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return V1Package.Literals.DEPOT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIntitule()
  {
    return intitule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIntitule(String newIntitule)
  {
    String oldIntitule = intitule;
    intitule = newIntitule;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, V1Package.DEPOT__INTITULE, oldIntitule, intitule));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getLimiteSize()
  {
    return limiteSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLimiteSize(int newLimiteSize)
  {
    int oldLimiteSize = limiteSize;
    limiteSize = newLimiteSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, V1Package.DEPOT__LIMITE_SIZE, oldLimiteSize, limiteSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getFormat()
  {
    if (format == null)
    {
      format = new EDataTypeEList<String>(String.class, this, V1Package.DEPOT__FORMAT);
    }
    return format;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case V1Package.DEPOT__INTITULE:
        return getIntitule();
      case V1Package.DEPOT__LIMITE_SIZE:
        return getLimiteSize();
      case V1Package.DEPOT__FORMAT:
        return getFormat();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case V1Package.DEPOT__INTITULE:
        setIntitule((String)newValue);
        return;
      case V1Package.DEPOT__LIMITE_SIZE:
        setLimiteSize((Integer)newValue);
        return;
      case V1Package.DEPOT__FORMAT:
        getFormat().clear();
        getFormat().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case V1Package.DEPOT__INTITULE:
        setIntitule(INTITULE_EDEFAULT);
        return;
      case V1Package.DEPOT__LIMITE_SIZE:
        setLimiteSize(LIMITE_SIZE_EDEFAULT);
        return;
      case V1Package.DEPOT__FORMAT:
        getFormat().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case V1Package.DEPOT__INTITULE:
        return INTITULE_EDEFAULT == null ? intitule != null : !INTITULE_EDEFAULT.equals(intitule);
      case V1Package.DEPOT__LIMITE_SIZE:
        return limiteSize != LIMITE_SIZE_EDEFAULT;
      case V1Package.DEPOT__FORMAT:
        return format != null && !format.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (intitule: ");
    result.append(intitule);
    result.append(", limiteSize: ");
    result.append(limiteSize);
    result.append(", format: ");
    result.append(format);
    result.append(')');
    return result.toString();
  }

} //DepotImpl
