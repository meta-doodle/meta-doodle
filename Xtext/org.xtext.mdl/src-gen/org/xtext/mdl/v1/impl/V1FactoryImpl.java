/**
 * generated by Xtext 2.19.0
 */
package org.xtext.mdl.v1.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.mdl.v1.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class V1FactoryImpl extends EFactoryImpl implements V1Factory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static V1Factory init()
  {
    try
    {
      V1Factory theV1Factory = (V1Factory)EPackage.Registry.INSTANCE.getEFactory(V1Package.eNS_URI);
      if (theV1Factory != null)
      {
        return theV1Factory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new V1FactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public V1FactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case V1Package.WORKFLOW: return createWorkflow();
      case V1Package.ETAPE: return createEtape();
      case V1Package.OBJET: return createObjet();
      case V1Package.COND_FIN: return createCondFin();
      case V1Package.SYNCH_DATE: return createSynchDate();
      case V1Package.DEPOT: return createDepot();
      case V1Package.QCM: return createQCM();
      case V1Package.TYPE_QCM: return createTypeQCM();
      case V1Package.RAPPEL: return createRappel();
      case V1Package.MAIL: return createMail();
      case V1Package.CONTENU: return createContenu();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Workflow createWorkflow()
  {
    WorkflowImpl workflow = new WorkflowImpl();
    return workflow;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Etape createEtape()
  {
    EtapeImpl etape = new EtapeImpl();
    return etape;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Objet createObjet()
  {
    ObjetImpl objet = new ObjetImpl();
    return objet;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CondFin createCondFin()
  {
    CondFinImpl condFin = new CondFinImpl();
    return condFin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SynchDate createSynchDate()
  {
    SynchDateImpl synchDate = new SynchDateImpl();
    return synchDate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Depot createDepot()
  {
    DepotImpl depot = new DepotImpl();
    return depot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public QCM createQCM()
  {
    QCMImpl qcm = new QCMImpl();
    return qcm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TypeQCM createTypeQCM()
  {
    TypeQCMImpl typeQCM = new TypeQCMImpl();
    return typeQCM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Rappel createRappel()
  {
    RappelImpl rappel = new RappelImpl();
    return rappel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Mail createMail()
  {
    MailImpl mail = new MailImpl();
    return mail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Contenu createContenu()
  {
    ContenuImpl contenu = new ContenuImpl();
    return contenu;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public V1Package getV1Package()
  {
    return (V1Package)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static V1Package getPackage()
  {
    return V1Package.eINSTANCE;
  }

} //V1FactoryImpl
