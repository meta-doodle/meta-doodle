/*
 * generated by Xtext 2.19.0
 */
package org.xtext.mdl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.mdl.ide.contentassist.antlr.internal.InternalV1Parser;
import org.xtext.mdl.services.V1GrammarAccess;

public class V1Parser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(V1GrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, V1GrammarAccess grammarAccess) {
			builder.put(grammarAccess.getObjetAccess().getAlternatives(), "rule__Objet__Alternatives");
			builder.put(grammarAccess.getTypeQCMAccess().getAlternatives(), "rule__TypeQCM__Alternatives");
			builder.put(grammarAccess.getWorkflowAccess().getGroup(), "rule__Workflow__Group__0");
			builder.put(grammarAccess.getEtapeAccess().getGroup(), "rule__Etape__Group__0");
			builder.put(grammarAccess.getObjetAccess().getGroup_0(), "rule__Objet__Group_0__0");
			builder.put(grammarAccess.getObjetAccess().getGroup_1(), "rule__Objet__Group_1__0");
			builder.put(grammarAccess.getObjetAccess().getGroup_2(), "rule__Objet__Group_2__0");
			builder.put(grammarAccess.getSynchDateAccess().getGroup(), "rule__SynchDate__Group__0");
			builder.put(grammarAccess.getDepotAccess().getGroup(), "rule__Depot__Group__0");
			builder.put(grammarAccess.getQCMAccess().getGroup(), "rule__QCM__Group__0");
			builder.put(grammarAccess.getRappelAccess().getGroup(), "rule__Rappel__Group__0");
			builder.put(grammarAccess.getMailAccess().getGroup(), "rule__Mail__Group__0");
			builder.put(grammarAccess.getWorkflowAccess().getDateDebutAssignment_0(), "rule__Workflow__DateDebutAssignment_0");
			builder.put(grammarAccess.getWorkflowAccess().getEtapesAssignment_1(), "rule__Workflow__EtapesAssignment_1");
			builder.put(grammarAccess.getEtapeAccess().getIdAssignment_0(), "rule__Etape__IdAssignment_0");
			builder.put(grammarAccess.getEtapeAccess().getNameAssignment_1(), "rule__Etape__NameAssignment_1");
			builder.put(grammarAccess.getEtapeAccess().getRappelsAssignment_2(), "rule__Etape__RappelsAssignment_2");
			builder.put(grammarAccess.getEtapeAccess().getObjAssignment_3(), "rule__Etape__ObjAssignment_3");
			builder.put(grammarAccess.getObjetAccess().getObjAssignment_0_0(), "rule__Objet__ObjAssignment_0_0");
			builder.put(grammarAccess.getObjetAccess().getCondAssignment_0_1(), "rule__Objet__CondAssignment_0_1");
			builder.put(grammarAccess.getObjetAccess().getMailAssignment_1_0(), "rule__Objet__MailAssignment_1_0");
			builder.put(grammarAccess.getObjetAccess().getDateEnvoiAssignment_1_1(), "rule__Objet__DateEnvoiAssignment_1_1");
			builder.put(grammarAccess.getObjetAccess().getSynchDateAssignment_2_0(), "rule__Objet__SynchDateAssignment_2_0");
			builder.put(grammarAccess.getObjetAccess().getCondAssignment_2_1(), "rule__Objet__CondAssignment_2_1");
			builder.put(grammarAccess.getObjetAccess().getDateFinAssignment_3(), "rule__Objet__DateFinAssignment_3");
			builder.put(grammarAccess.getObjetAccess().getDepotAssignment_4(), "rule__Objet__DepotAssignment_4");
			builder.put(grammarAccess.getCondFinAccess().getDateAssignment(), "rule__CondFin__DateAssignment");
			builder.put(grammarAccess.getSynchDateAccess().getStartAssignment_0(), "rule__SynchDate__StartAssignment_0");
			builder.put(grammarAccess.getSynchDateAccess().getEndAssignment_1(), "rule__SynchDate__EndAssignment_1");
			builder.put(grammarAccess.getSynchDateAccess().getPrecisionAssignment_2(), "rule__SynchDate__PrecisionAssignment_2");
			builder.put(grammarAccess.getDepotAccess().getIntituleAssignment_0(), "rule__Depot__IntituleAssignment_0");
			builder.put(grammarAccess.getDepotAccess().getLimiteSizeAssignment_1(), "rule__Depot__LimiteSizeAssignment_1");
			builder.put(grammarAccess.getDepotAccess().getFormatAssignment_2(), "rule__Depot__FormatAssignment_2");
			builder.put(grammarAccess.getQCMAccess().getTypeAssignment_0(), "rule__QCM__TypeAssignment_0");
			builder.put(grammarAccess.getQCMAccess().getIntituleAssignment_1(), "rule__QCM__IntituleAssignment_1");
			builder.put(grammarAccess.getQCMAccess().getResponsesAssignment_2(), "rule__QCM__ResponsesAssignment_2");
			builder.put(grammarAccess.getQCMAccess().getSuiteAssignment_3(), "rule__QCM__SuiteAssignment_3");
			builder.put(grammarAccess.getTypeQCMAccess().getOPENQUESTIONAssignment_0(), "rule__TypeQCM__OPENQUESTIONAssignment_0");
			builder.put(grammarAccess.getTypeQCMAccess().getCHECKBOXAssignment_1(), "rule__TypeQCM__CHECKBOXAssignment_1");
			builder.put(grammarAccess.getTypeQCMAccess().getRADIOBUTTONAssignment_2(), "rule__TypeQCM__RADIOBUTTONAssignment_2");
			builder.put(grammarAccess.getRappelAccess().getDateAssignment_0(), "rule__Rappel__DateAssignment_0");
			builder.put(grammarAccess.getRappelAccess().getMailAssignment_1(), "rule__Rappel__MailAssignment_1");
			builder.put(grammarAccess.getMailAccess().getExpediteurAssignment_1(), "rule__Mail__ExpediteurAssignment_1");
			builder.put(grammarAccess.getMailAccess().getDestinataireAssignment_3(), "rule__Mail__DestinataireAssignment_3");
			builder.put(grammarAccess.getMailAccess().getPjAssignment_5(), "rule__Mail__PjAssignment_5");
			builder.put(grammarAccess.getMailAccess().getCorpsAssignment_7(), "rule__Mail__CorpsAssignment_7");
			builder.put(grammarAccess.getContenuAccess().getCorpsAssignment_0(), "rule__Contenu__CorpsAssignment_0");
			builder.put(grammarAccess.getContenuAccess().getInvitationAssignment_1(), "rule__Contenu__InvitationAssignment_1");
			builder.put(grammarAccess.getContenuAccess().getUnorderedGroup(), "rule__Contenu__UnorderedGroup");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private V1GrammarAccess grammarAccess;

	@Override
	protected InternalV1Parser createParser() {
		InternalV1Parser result = new InternalV1Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public V1GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(V1GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
