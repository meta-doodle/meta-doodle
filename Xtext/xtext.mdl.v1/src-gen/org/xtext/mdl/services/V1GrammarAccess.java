/*
 * generated by Xtext 2.19.0
 */
package org.xtext.mdl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class V1GrammarAccess extends AbstractGrammarElementFinder {
	
	public class WorkflowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.Workflow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDateDebutAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDateDebutDATETerminalRuleCall_0_0 = (RuleCall)cDateDebutAssignment_0.eContents().get(0);
		private final Assignment cEtapesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEtapesEtapeParserRuleCall_1_0 = (RuleCall)cEtapesAssignment_1.eContents().get(0);
		
		//// Parsing
		//Workflow:
		//	dateDebut=DATE? etapes+=Etape*;
		@Override public ParserRule getRule() { return rule; }
		
		//dateDebut=DATE? etapes+=Etape*
		public Group getGroup() { return cGroup; }
		
		//dateDebut=DATE?
		public Assignment getDateDebutAssignment_0() { return cDateDebutAssignment_0; }
		
		//DATE
		public RuleCall getDateDebutDATETerminalRuleCall_0_0() { return cDateDebutDATETerminalRuleCall_0_0; }
		
		//etapes+=Etape*
		public Assignment getEtapesAssignment_1() { return cEtapesAssignment_1; }
		
		//Etape
		public RuleCall getEtapesEtapeParserRuleCall_1_0() { return cEtapesEtapeParserRuleCall_1_0; }
	}
	public class EtapeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.Etape");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIdIDTerminalRuleCall_0_0 = (RuleCall)cIdAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cRappelsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRappelsRappelParserRuleCall_2_0 = (RuleCall)cRappelsAssignment_2.eContents().get(0);
		private final Assignment cObjAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cObjObjetParserRuleCall_3_0 = (RuleCall)cObjAssignment_3.eContents().get(0);
		
		//Etape:
		//	id=ID name=STRING rappels+=Rappel* obj=Objet;
		@Override public ParserRule getRule() { return rule; }
		
		//id=ID name=STRING rappels+=Rappel* obj=Objet
		public Group getGroup() { return cGroup; }
		
		//id=ID
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_0_0() { return cIdIDTerminalRuleCall_0_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//rappels+=Rappel*
		public Assignment getRappelsAssignment_2() { return cRappelsAssignment_2; }
		
		//Rappel
		public RuleCall getRappelsRappelParserRuleCall_2_0() { return cRappelsRappelParserRuleCall_2_0; }
		
		//obj=Objet
		public Assignment getObjAssignment_3() { return cObjAssignment_3; }
		
		//Objet
		public RuleCall getObjObjetParserRuleCall_3_0() { return cObjObjetParserRuleCall_3_0; }
	}
	public class ObjetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.Objet");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cObjAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cObjQCMParserRuleCall_0_0_0 = (RuleCall)cObjAssignment_0_0.eContents().get(0);
		private final Assignment cCondAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cCondCondFinParserRuleCall_0_1_0 = (RuleCall)cCondAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cMailAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cMailMailParserRuleCall_1_0_0 = (RuleCall)cMailAssignment_1_0.eContents().get(0);
		private final Assignment cDateEnvoiAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDateEnvoiDATETerminalRuleCall_1_1_0 = (RuleCall)cDateEnvoiAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cSynchDateAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cSynchDateSynchDateParserRuleCall_2_0_0 = (RuleCall)cSynchDateAssignment_2_0.eContents().get(0);
		private final Assignment cCondAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCondCondFinParserRuleCall_2_1_0 = (RuleCall)cCondAssignment_2_1.eContents().get(0);
		private final Assignment cDateFinAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cDateFinDATETerminalRuleCall_3_0 = (RuleCall)cDateFinAssignment_3.eContents().get(0);
		private final Assignment cDepotAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cDepotDepotParserRuleCall_4_0 = (RuleCall)cDepotAssignment_4.eContents().get(0);
		
		//Objet:
		//	obj=QCM cond=CondFin
		//	| mail=Mail dateEnvoi=DATE
		//	| synchDate=SynchDate cond=CondFin
		//	| dateFin=DATE
		//	| depot=Depot;
		@Override public ParserRule getRule() { return rule; }
		
		//obj=QCM cond=CondFin | mail=Mail dateEnvoi=DATE | synchDate=SynchDate cond=CondFin | dateFin=DATE | depot=Depot
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//obj=QCM cond=CondFin
		public Group getGroup_0() { return cGroup_0; }
		
		//obj=QCM
		public Assignment getObjAssignment_0_0() { return cObjAssignment_0_0; }
		
		//QCM
		public RuleCall getObjQCMParserRuleCall_0_0_0() { return cObjQCMParserRuleCall_0_0_0; }
		
		//cond=CondFin
		public Assignment getCondAssignment_0_1() { return cCondAssignment_0_1; }
		
		//CondFin
		public RuleCall getCondCondFinParserRuleCall_0_1_0() { return cCondCondFinParserRuleCall_0_1_0; }
		
		//mail=Mail dateEnvoi=DATE
		public Group getGroup_1() { return cGroup_1; }
		
		//mail=Mail
		public Assignment getMailAssignment_1_0() { return cMailAssignment_1_0; }
		
		//Mail
		public RuleCall getMailMailParserRuleCall_1_0_0() { return cMailMailParserRuleCall_1_0_0; }
		
		//dateEnvoi=DATE
		public Assignment getDateEnvoiAssignment_1_1() { return cDateEnvoiAssignment_1_1; }
		
		//DATE
		public RuleCall getDateEnvoiDATETerminalRuleCall_1_1_0() { return cDateEnvoiDATETerminalRuleCall_1_1_0; }
		
		//synchDate=SynchDate cond=CondFin
		public Group getGroup_2() { return cGroup_2; }
		
		//synchDate=SynchDate
		public Assignment getSynchDateAssignment_2_0() { return cSynchDateAssignment_2_0; }
		
		//SynchDate
		public RuleCall getSynchDateSynchDateParserRuleCall_2_0_0() { return cSynchDateSynchDateParserRuleCall_2_0_0; }
		
		//cond=CondFin
		public Assignment getCondAssignment_2_1() { return cCondAssignment_2_1; }
		
		//CondFin
		public RuleCall getCondCondFinParserRuleCall_2_1_0() { return cCondCondFinParserRuleCall_2_1_0; }
		
		//dateFin=DATE
		public Assignment getDateFinAssignment_3() { return cDateFinAssignment_3; }
		
		//DATE
		public RuleCall getDateFinDATETerminalRuleCall_3_0() { return cDateFinDATETerminalRuleCall_3_0; }
		
		//depot=Depot
		public Assignment getDepotAssignment_4() { return cDepotAssignment_4; }
		
		//Depot
		public RuleCall getDepotDepotParserRuleCall_4_0() { return cDepotDepotParserRuleCall_4_0; }
	}
	public class CondFinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.CondFin");
		private final Assignment cDateAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDateDATETerminalRuleCall_0 = (RuleCall)cDateAssignment.eContents().get(0);
		
		//CondFin:
		//	date=DATE;
		@Override public ParserRule getRule() { return rule; }
		
		//date=DATE
		public Assignment getDateAssignment() { return cDateAssignment; }
		
		//DATE
		public RuleCall getDateDATETerminalRuleCall_0() { return cDateDATETerminalRuleCall_0; }
	}
	public class SynchDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.SynchDate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStartAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cStartDATETerminalRuleCall_0_0 = (RuleCall)cStartAssignment_0.eContents().get(0);
		private final Assignment cEndAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEndDATETerminalRuleCall_1_0 = (RuleCall)cEndAssignment_1.eContents().get(0);
		private final Assignment cPrecisionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPrecisionSTRINGTerminalRuleCall_2_0 = (RuleCall)cPrecisionAssignment_2.eContents().get(0);
		
		//SynchDate:
		//	start=DATE end=DATE precision=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//start=DATE end=DATE precision=STRING?
		public Group getGroup() { return cGroup; }
		
		//start=DATE
		public Assignment getStartAssignment_0() { return cStartAssignment_0; }
		
		//DATE
		public RuleCall getStartDATETerminalRuleCall_0_0() { return cStartDATETerminalRuleCall_0_0; }
		
		//end=DATE
		public Assignment getEndAssignment_1() { return cEndAssignment_1; }
		
		//DATE
		public RuleCall getEndDATETerminalRuleCall_1_0() { return cEndDATETerminalRuleCall_1_0; }
		
		//precision=STRING?
		public Assignment getPrecisionAssignment_2() { return cPrecisionAssignment_2; }
		
		//STRING
		public RuleCall getPrecisionSTRINGTerminalRuleCall_2_0() { return cPrecisionSTRINGTerminalRuleCall_2_0; }
	}
	public class DepotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.Depot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIntituleAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIntituleSTRINGTerminalRuleCall_0_0 = (RuleCall)cIntituleAssignment_0.eContents().get(0);
		private final Assignment cLimiteSizeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLimiteSizeINTTerminalRuleCall_1_0 = (RuleCall)cLimiteSizeAssignment_1.eContents().get(0);
		private final Assignment cFormatAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFormatSTRINGTerminalRuleCall_2_0 = (RuleCall)cFormatAssignment_2.eContents().get(0);
		
		//Depot:
		//	intitule=STRING limiteSize=INT format+=STRING*;
		@Override public ParserRule getRule() { return rule; }
		
		//intitule=STRING limiteSize=INT format+=STRING*
		public Group getGroup() { return cGroup; }
		
		//intitule=STRING
		public Assignment getIntituleAssignment_0() { return cIntituleAssignment_0; }
		
		//STRING
		public RuleCall getIntituleSTRINGTerminalRuleCall_0_0() { return cIntituleSTRINGTerminalRuleCall_0_0; }
		
		//limiteSize=INT
		public Assignment getLimiteSizeAssignment_1() { return cLimiteSizeAssignment_1; }
		
		//INT
		public RuleCall getLimiteSizeINTTerminalRuleCall_1_0() { return cLimiteSizeINTTerminalRuleCall_1_0; }
		
		//format+=STRING*
		public Assignment getFormatAssignment_2() { return cFormatAssignment_2; }
		
		//STRING
		public RuleCall getFormatSTRINGTerminalRuleCall_2_0() { return cFormatSTRINGTerminalRuleCall_2_0; }
	}
	public class QCMElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.QCM");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeTypeQCMParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cIntituleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIntituleSTRINGTerminalRuleCall_1_0 = (RuleCall)cIntituleAssignment_1.eContents().get(0);
		private final Assignment cResponsesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cResponsesSTRINGTerminalRuleCall_2_0 = (RuleCall)cResponsesAssignment_2.eContents().get(0);
		private final Assignment cSuiteAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSuiteQCMParserRuleCall_3_0 = (RuleCall)cSuiteAssignment_3.eContents().get(0);
		
		//QCM:
		//	type=TypeQCM intitule=STRING responses+=STRING* suite=QCM?;
		@Override public ParserRule getRule() { return rule; }
		
		//type=TypeQCM intitule=STRING responses+=STRING* suite=QCM?
		public Group getGroup() { return cGroup; }
		
		//type=TypeQCM
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//TypeQCM
		public RuleCall getTypeTypeQCMParserRuleCall_0_0() { return cTypeTypeQCMParserRuleCall_0_0; }
		
		//intitule=STRING
		public Assignment getIntituleAssignment_1() { return cIntituleAssignment_1; }
		
		//STRING
		public RuleCall getIntituleSTRINGTerminalRuleCall_1_0() { return cIntituleSTRINGTerminalRuleCall_1_0; }
		
		//responses+=STRING*
		public Assignment getResponsesAssignment_2() { return cResponsesAssignment_2; }
		
		//STRING
		public RuleCall getResponsesSTRINGTerminalRuleCall_2_0() { return cResponsesSTRINGTerminalRuleCall_2_0; }
		
		//suite=QCM?
		public Assignment getSuiteAssignment_3() { return cSuiteAssignment_3; }
		
		//QCM
		public RuleCall getSuiteQCMParserRuleCall_3_0() { return cSuiteQCMParserRuleCall_3_0; }
	}
	public class TypeQCMElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.TypeQCM");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOPENQUESTIONAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cOPENQUESTIONOpenQuestionKeyword_0_0 = (Keyword)cOPENQUESTIONAssignment_0.eContents().get(0);
		private final Assignment cCHECKBOXAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cCHECKBOXCheckBoxKeyword_1_0 = (Keyword)cCHECKBOXAssignment_1.eContents().get(0);
		private final Assignment cRADIOBUTTONAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cRADIOBUTTONRadioButtonKeyword_2_0 = (Keyword)cRADIOBUTTONAssignment_2.eContents().get(0);
		
		//TypeQCM:
		//	OPENQUESTION='OpenQuestion' | CHECKBOX='CheckBox' | RADIOBUTTON='RadioButton';
		@Override public ParserRule getRule() { return rule; }
		
		//OPENQUESTION='OpenQuestion' | CHECKBOX='CheckBox' | RADIOBUTTON='RadioButton'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//OPENQUESTION='OpenQuestion'
		public Assignment getOPENQUESTIONAssignment_0() { return cOPENQUESTIONAssignment_0; }
		
		//'OpenQuestion'
		public Keyword getOPENQUESTIONOpenQuestionKeyword_0_0() { return cOPENQUESTIONOpenQuestionKeyword_0_0; }
		
		//CHECKBOX='CheckBox'
		public Assignment getCHECKBOXAssignment_1() { return cCHECKBOXAssignment_1; }
		
		//'CheckBox'
		public Keyword getCHECKBOXCheckBoxKeyword_1_0() { return cCHECKBOXCheckBoxKeyword_1_0; }
		
		//RADIOBUTTON='RadioButton'
		public Assignment getRADIOBUTTONAssignment_2() { return cRADIOBUTTONAssignment_2; }
		
		//'RadioButton'
		public Keyword getRADIOBUTTONRadioButtonKeyword_2_0() { return cRADIOBUTTONRadioButtonKeyword_2_0; }
	}
	public class RappelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.Rappel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDateAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDateDATETerminalRuleCall_0_0 = (RuleCall)cDateAssignment_0.eContents().get(0);
		private final Assignment cMailAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMailMailParserRuleCall_1_0 = (RuleCall)cMailAssignment_1.eContents().get(0);
		
		//Rappel:
		//	date=DATE mail=Mail;
		@Override public ParserRule getRule() { return rule; }
		
		//date=DATE mail=Mail
		public Group getGroup() { return cGroup; }
		
		//date=DATE
		public Assignment getDateAssignment_0() { return cDateAssignment_0; }
		
		//DATE
		public RuleCall getDateDATETerminalRuleCall_0_0() { return cDateDATETerminalRuleCall_0_0; }
		
		//mail=Mail
		public Assignment getMailAssignment_1() { return cMailAssignment_1; }
		
		//Mail
		public RuleCall getMailMailParserRuleCall_1_0() { return cMailMailParserRuleCall_1_0; }
	}
	public class MailElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.Mail");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFromKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cExpediteurAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpediteurADDRESSEMAILTerminalRuleCall_1_0 = (RuleCall)cExpediteurAssignment_1.eContents().get(0);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDestinataireAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDestinataireADDRESSEMAILTerminalRuleCall_3_0 = (RuleCall)cDestinataireAssignment_3.eContents().get(0);
		private final Keyword cPJKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPjAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPjSTRINGTerminalRuleCall_5_0 = (RuleCall)cPjAssignment_5.eContents().get(0);
		private final Keyword cBodyKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cCorpsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cCorpsContenuParserRuleCall_7_0 = (RuleCall)cCorpsAssignment_7.eContents().get(0);
		
		//Mail:
		//	'From' expediteur=ADDRESSEMAIL 'To' destinataire+=ADDRESSEMAIL+ 'PJ' pj=STRING? 'Body' corps=Contenu;
		@Override public ParserRule getRule() { return rule; }
		
		//'From' expediteur=ADDRESSEMAIL 'To' destinataire+=ADDRESSEMAIL+ 'PJ' pj=STRING? 'Body' corps=Contenu
		public Group getGroup() { return cGroup; }
		
		//'From'
		public Keyword getFromKeyword_0() { return cFromKeyword_0; }
		
		//expediteur=ADDRESSEMAIL
		public Assignment getExpediteurAssignment_1() { return cExpediteurAssignment_1; }
		
		//ADDRESSEMAIL
		public RuleCall getExpediteurADDRESSEMAILTerminalRuleCall_1_0() { return cExpediteurADDRESSEMAILTerminalRuleCall_1_0; }
		
		//'To'
		public Keyword getToKeyword_2() { return cToKeyword_2; }
		
		//destinataire+=ADDRESSEMAIL+
		public Assignment getDestinataireAssignment_3() { return cDestinataireAssignment_3; }
		
		//ADDRESSEMAIL
		public RuleCall getDestinataireADDRESSEMAILTerminalRuleCall_3_0() { return cDestinataireADDRESSEMAILTerminalRuleCall_3_0; }
		
		//'PJ'
		public Keyword getPJKeyword_4() { return cPJKeyword_4; }
		
		//pj=STRING?
		public Assignment getPjAssignment_5() { return cPjAssignment_5; }
		
		//STRING
		public RuleCall getPjSTRINGTerminalRuleCall_5_0() { return cPjSTRINGTerminalRuleCall_5_0; }
		
		//'Body'
		public Keyword getBodyKeyword_6() { return cBodyKeyword_6; }
		
		//corps=Contenu
		public Assignment getCorpsAssignment_7() { return cCorpsAssignment_7; }
		
		//Contenu
		public RuleCall getCorpsContenuParserRuleCall_7_0() { return cCorpsContenuParserRuleCall_7_0; }
	}
	public class ContenuElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.Contenu");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Assignment cCorpsAssignment_0 = (Assignment)cUnorderedGroup.eContents().get(0);
		private final RuleCall cCorpsSTRINGTerminalRuleCall_0_0 = (RuleCall)cCorpsAssignment_0.eContents().get(0);
		private final Assignment cInvitationAssignment_1 = (Assignment)cUnorderedGroup.eContents().get(1);
		private final RuleCall cInvitationSTRINGTerminalRuleCall_1_0 = (RuleCall)cInvitationAssignment_1.eContents().get(0);
		
		//// A REDIFINIR
		//Contenu:
		//	corps=STRING & invitation=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//corps=STRING & invitation=STRING
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//corps=STRING
		public Assignment getCorpsAssignment_0() { return cCorpsAssignment_0; }
		
		//STRING
		public RuleCall getCorpsSTRINGTerminalRuleCall_0_0() { return cCorpsSTRINGTerminalRuleCall_0_0; }
		
		//invitation=STRING
		public Assignment getInvitationAssignment_1() { return cInvitationAssignment_1; }
		
		//STRING
		public RuleCall getInvitationSTRINGTerminalRuleCall_1_0() { return cInvitationSTRINGTerminalRuleCall_1_0; }
	}
	
	
	private final WorkflowElements pWorkflow;
	private final EtapeElements pEtape;
	private final ObjetElements pObjet;
	private final CondFinElements pCondFin;
	private final SynchDateElements pSynchDate;
	private final DepotElements pDepot;
	private final QCMElements pQCM;
	private final TypeQCMElements pTypeQCM;
	private final RappelElements pRappel;
	private final MailElements pMail;
	private final ContenuElements pContenu;
	private final TerminalRule tDATE;
	private final TerminalRule tADDRESSEMAIL;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public V1GrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pWorkflow = new WorkflowElements();
		this.pEtape = new EtapeElements();
		this.pObjet = new ObjetElements();
		this.pCondFin = new CondFinElements();
		this.pSynchDate = new SynchDateElements();
		this.pDepot = new DepotElements();
		this.pQCM = new QCMElements();
		this.pTypeQCM = new TypeQCMElements();
		this.pRappel = new RappelElements();
		this.pMail = new MailElements();
		this.pContenu = new ContenuElements();
		this.tDATE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.DATE");
		this.tADDRESSEMAIL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mdl.V1.ADDRESSEMAIL");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.mdl.V1".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//// Parsing
	//Workflow:
	//	dateDebut=DATE? etapes+=Etape*;
	public WorkflowElements getWorkflowAccess() {
		return pWorkflow;
	}
	
	public ParserRule getWorkflowRule() {
		return getWorkflowAccess().getRule();
	}
	
	//Etape:
	//	id=ID name=STRING rappels+=Rappel* obj=Objet;
	public EtapeElements getEtapeAccess() {
		return pEtape;
	}
	
	public ParserRule getEtapeRule() {
		return getEtapeAccess().getRule();
	}
	
	//Objet:
	//	obj=QCM cond=CondFin
	//	| mail=Mail dateEnvoi=DATE
	//	| synchDate=SynchDate cond=CondFin
	//	| dateFin=DATE
	//	| depot=Depot;
	public ObjetElements getObjetAccess() {
		return pObjet;
	}
	
	public ParserRule getObjetRule() {
		return getObjetAccess().getRule();
	}
	
	//CondFin:
	//	date=DATE;
	public CondFinElements getCondFinAccess() {
		return pCondFin;
	}
	
	public ParserRule getCondFinRule() {
		return getCondFinAccess().getRule();
	}
	
	//SynchDate:
	//	start=DATE end=DATE precision=STRING?;
	public SynchDateElements getSynchDateAccess() {
		return pSynchDate;
	}
	
	public ParserRule getSynchDateRule() {
		return getSynchDateAccess().getRule();
	}
	
	//Depot:
	//	intitule=STRING limiteSize=INT format+=STRING*;
	public DepotElements getDepotAccess() {
		return pDepot;
	}
	
	public ParserRule getDepotRule() {
		return getDepotAccess().getRule();
	}
	
	//QCM:
	//	type=TypeQCM intitule=STRING responses+=STRING* suite=QCM?;
	public QCMElements getQCMAccess() {
		return pQCM;
	}
	
	public ParserRule getQCMRule() {
		return getQCMAccess().getRule();
	}
	
	//TypeQCM:
	//	OPENQUESTION='OpenQuestion' | CHECKBOX='CheckBox' | RADIOBUTTON='RadioButton';
	public TypeQCMElements getTypeQCMAccess() {
		return pTypeQCM;
	}
	
	public ParserRule getTypeQCMRule() {
		return getTypeQCMAccess().getRule();
	}
	
	//Rappel:
	//	date=DATE mail=Mail;
	public RappelElements getRappelAccess() {
		return pRappel;
	}
	
	public ParserRule getRappelRule() {
		return getRappelAccess().getRule();
	}
	
	//Mail:
	//	'From' expediteur=ADDRESSEMAIL 'To' destinataire+=ADDRESSEMAIL+ 'PJ' pj=STRING? 'Body' corps=Contenu;
	public MailElements getMailAccess() {
		return pMail;
	}
	
	public ParserRule getMailRule() {
		return getMailAccess().getRule();
	}
	
	//// A REDIFINIR
	//Contenu:
	//	corps=STRING & invitation=STRING;
	public ContenuElements getContenuAccess() {
		return pContenu;
	}
	
	public ParserRule getContenuRule() {
		return getContenuAccess().getRule();
	}
	
	//terminal DATE:
	//	'0'..'2' '0'..'9' '/' '0'..'1' '0'..'9' '/' '0'..'9' '0'..'9';
	public TerminalRule getDATERule() {
		return tDATE;
	}
	
	//terminal ADDRESSEMAIL:
	//	('0'..'9' | 'a'..'z' | 'A'..'Z')+ "@" ('a'..'z' | 'A'..'Z')+ "." ('a'..'z' | 'A'..'Z')+;
	public TerminalRule getADDRESSEMAILRule() {
		return tADDRESSEMAIL;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
