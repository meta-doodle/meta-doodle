/*
 * generated by Xtext 2.19.0
 */
package org.xtext.mdl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.mdl.ide.contentassist.antlr.internal.InternalV1Parser;
import org.xtext.mdl.services.V1GrammarAccess;

public class V1Parser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(V1GrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, V1GrammarAccess grammarAccess) {
			builder.put(grammarAccess.getObjectAccess().getAlternatives(), "rule__Object__Alternatives");
			builder.put(grammarAccess.getTypeQCMAccess().getAlternatives(), "rule__TypeQCM__Alternatives");
			builder.put(grammarAccess.getWorkflowAccess().getGroup(), "rule__Workflow__Group__0");
			builder.put(grammarAccess.getWorkflowAccess().getGroup_0(), "rule__Workflow__Group_0__0");
			builder.put(grammarAccess.getStepAccess().getGroup(), "rule__Step__Group__0");
			builder.put(grammarAccess.getStepAccess().getGroup_5(), "rule__Step__Group_5__0");
			builder.put(grammarAccess.getObjectAccess().getGroup_0(), "rule__Object__Group_0__0");
			builder.put(grammarAccess.getObjectAccess().getGroup_1(), "rule__Object__Group_1__0");
			builder.put(grammarAccess.getObjectAccess().getGroup_2(), "rule__Object__Group_2__0");
			builder.put(grammarAccess.getObjectAccess().getGroup_3(), "rule__Object__Group_3__0");
			builder.put(grammarAccess.getObjectAccess().getGroup_4(), "rule__Object__Group_4__0");
			builder.put(grammarAccess.getEndCondAccess().getGroup(), "rule__EndCond__Group__0");
			builder.put(grammarAccess.getEndCondAccess().getGroup_1(), "rule__EndCond__Group_1__0");
			builder.put(grammarAccess.getSynchDateAccess().getGroup(), "rule__SynchDate__Group__0");
			builder.put(grammarAccess.getDepotAccess().getGroup(), "rule__Depot__Group__0");
			builder.put(grammarAccess.getQCMAccess().getGroup(), "rule__QCM__Group__0");
			builder.put(grammarAccess.getQCMAccess().getGroup_5(), "rule__QCM__Group_5__0");
			builder.put(grammarAccess.getReminderAccess().getGroup(), "rule__Reminder__Group__0");
			builder.put(grammarAccess.getMailAccess().getGroup(), "rule__Mail__Group__0");
			builder.put(grammarAccess.getMailAccess().getGroup_5(), "rule__Mail__Group_5__0");
			builder.put(grammarAccess.getWorkflowAccess().getDateDebutAssignment_0_1(), "rule__Workflow__DateDebutAssignment_0_1");
			builder.put(grammarAccess.getWorkflowAccess().getStepsAssignment_1(), "rule__Workflow__StepsAssignment_1");
			builder.put(grammarAccess.getStepAccess().getIdAssignment_2(), "rule__Step__IdAssignment_2");
			builder.put(grammarAccess.getStepAccess().getNameAssignment_4(), "rule__Step__NameAssignment_4");
			builder.put(grammarAccess.getStepAccess().getRemindersAssignment_5_1(), "rule__Step__RemindersAssignment_5_1");
			builder.put(grammarAccess.getStepAccess().getObjAssignment_6(), "rule__Step__ObjAssignment_6");
			builder.put(grammarAccess.getObjectAccess().getObjAssignment_0_1(), "rule__Object__ObjAssignment_0_1");
			builder.put(grammarAccess.getObjectAccess().getCondAssignment_0_2(), "rule__Object__CondAssignment_0_2");
			builder.put(grammarAccess.getObjectAccess().getMailAssignment_1_1(), "rule__Object__MailAssignment_1_1");
			builder.put(grammarAccess.getObjectAccess().getDateEnvoiAssignment_1_2(), "rule__Object__DateEnvoiAssignment_1_2");
			builder.put(grammarAccess.getObjectAccess().getSynchDateAssignment_2_1(), "rule__Object__SynchDateAssignment_2_1");
			builder.put(grammarAccess.getObjectAccess().getCondAssignment_2_2(), "rule__Object__CondAssignment_2_2");
			builder.put(grammarAccess.getObjectAccess().getDepotAssignment_3_1(), "rule__Object__DepotAssignment_3_1");
			builder.put(grammarAccess.getObjectAccess().getDateFinAssignment_4_1(), "rule__Object__DateFinAssignment_4_1");
			builder.put(grammarAccess.getEndCondAccess().getDateAssignment_0(), "rule__EndCond__DateAssignment_0");
			builder.put(grammarAccess.getEndCondAccess().getParticipantsRequiredAssignment_1_1(), "rule__EndCond__ParticipantsRequiredAssignment_1_1");
			builder.put(grammarAccess.getSynchDateAccess().getStartAssignment_2(), "rule__SynchDate__StartAssignment_2");
			builder.put(grammarAccess.getSynchDateAccess().getEndAssignment_4(), "rule__SynchDate__EndAssignment_4");
			builder.put(grammarAccess.getSynchDateAccess().getPrecisionAssignment_6(), "rule__SynchDate__PrecisionAssignment_6");
			builder.put(grammarAccess.getDepotAccess().getIntituleAssignment_2(), "rule__Depot__IntituleAssignment_2");
			builder.put(grammarAccess.getDepotAccess().getLimiteSizeAssignment_4(), "rule__Depot__LimiteSizeAssignment_4");
			builder.put(grammarAccess.getDepotAccess().getFormatAssignment_5(), "rule__Depot__FormatAssignment_5");
			builder.put(grammarAccess.getQCMAccess().getTypeAssignment_2(), "rule__QCM__TypeAssignment_2");
			builder.put(grammarAccess.getQCMAccess().getIntituleAssignment_4(), "rule__QCM__IntituleAssignment_4");
			builder.put(grammarAccess.getQCMAccess().getResponsesAssignment_5_1(), "rule__QCM__ResponsesAssignment_5_1");
			builder.put(grammarAccess.getQCMAccess().getSuiteAssignment_7(), "rule__QCM__SuiteAssignment_7");
			builder.put(grammarAccess.getTypeQCMAccess().getOPENQUESTIONAssignment_0(), "rule__TypeQCM__OPENQUESTIONAssignment_0");
			builder.put(grammarAccess.getTypeQCMAccess().getCHECKBOXAssignment_1(), "rule__TypeQCM__CHECKBOXAssignment_1");
			builder.put(grammarAccess.getTypeQCMAccess().getRADIOBUTTONAssignment_2(), "rule__TypeQCM__RADIOBUTTONAssignment_2");
			builder.put(grammarAccess.getReminderAccess().getDateAssignment_1(), "rule__Reminder__DateAssignment_1");
			builder.put(grammarAccess.getReminderAccess().getMailAssignment_2(), "rule__Reminder__MailAssignment_2");
			builder.put(grammarAccess.getMailAccess().getExpediteurAssignment_2(), "rule__Mail__ExpediteurAssignment_2");
			builder.put(grammarAccess.getMailAccess().getDestinataireAssignment_4(), "rule__Mail__DestinataireAssignment_4");
			builder.put(grammarAccess.getMailAccess().getPjAssignment_5_1(), "rule__Mail__PjAssignment_5_1");
			builder.put(grammarAccess.getMailAccess().getCorpsAssignment_7(), "rule__Mail__CorpsAssignment_7");
			builder.put(grammarAccess.getContenuAccess().getCorpsAssignment(), "rule__Contenu__CorpsAssignment");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private V1GrammarAccess grammarAccess;

	@Override
	protected InternalV1Parser createParser() {
		InternalV1Parser result = new InternalV1Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public V1GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(V1GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
